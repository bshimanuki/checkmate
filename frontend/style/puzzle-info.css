.puzzleinfo.pane {
  padding-right: 1em;
  padding-left: 1em;
  overflow: auto;
}

.puzzleinfo h2 {
  margin-bottom: 5px;
  display: flex;
}

.feeds {
  font-size: smaller;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: start;
}
.feeds > * {
  margin: 2px 0;
}

.puzzleinfo .table.puzzleinfo-tags {
  margin: 1em 0;
}
.puzzleinfo .td {
  vertical-align: middle;
}

.puzzleinfo .feeds > input {
  border: 1px dotted gray;
}
.puzzleinfo .feeds > input:not(:focus):not(:disabled):hover {
  background-color: lightcyan;
  filter: drop-shadow(0 0 3px gray);
}

.puzzleinfo-external-link {
  height: 0.75em;
  width: 0.75em;
  align-self: start;
}
.puzzleinfo-edit {
  height: 1em;
  width: 1em;
  margin-left: 5px;
  color: darkblue;
  cursor: pointer;
}
.puzzleinfo-done {
  height: 1em;
  width: 1em;
  margin-left: 5px;
  color: green;
  cursor: pointer;
}
.puzzleinfo .drop-container {
  display: flex;
  justify-content: start;
}
.feeds .puzzleinfo-remove-entity-container {
  margin: 0 2px;
}
.puzzleinfo-remove-entity-container {
  border: 1px solid gray;
  border-radius: 0.33em;
  background-color: lightgray;
  padding: 0 2px;
  display: inline-flex;
  align-items: center;
}
.puzzleinfo-remove-entity {
  height: 1em;
  width: 1em;
  cursor: pointer;
  color: red;
  stroke-width: 4;
}
.puzzleinfo-remove-entity:hover ~ * {
  text-decoration: line-through;
}

.puzzleinfo .tag-key:not(:focus) {
  text-align: right;
  font-size: smaller;
}
.puzzleinfo .tag-value {
  width: 200px;
  border: 1px dotted gray;
}

.puzzleinfo .feeders {
  display: flex;
  flex-direction: column;
}
.puzzleinfo .feeders-header {
  display: flex;
  align-items: center;
  margin-bottom: 0.5em;
}
.puzzleinfo .feeders-list .td {
  border: 1px solid lightgray;
  padding: 2px 6px;
}
.puzzleinfo .feeders-answer {
  min-width: 6em;
}
.puzzleinfo .feeders-edit-list {
  display: flex;
  flex-direction: column;
}
.puzzleinfo .feeders-edit-list > :not(input) {
  cursor: move;
}
.puzzleinfo .feeders-edit-list > :not(:first-child) {
  margin-top: 2px;
}
.puzzleinfo .feeders-edit-list > :not(:last-child) {
  margin-bottom: 2px;
}

.puzzleinfo-remove-tag-ghost {
  position: relative;
  height: 16px;
  width: 16px;
}
/* need ghost because margins affect spacing */
.puzzleinfo-remove-tag {
  cursor: pointer;
  position: absolute;
  margin-top: calc(5px + 0.5em);
  transform: translate(0, -50%);
  height: 16px;
  width: 16px;
}
.puzzleinfo-remove-tag:hover {
  filter: drop-shadow(0 0 3px red);
}
.puzzleinfo-remove-tag:hover ~ .puzzleinfo-key,
.puzzleinfo-remove-tag:hover ~ .puzzleinfo-key *,
.puzzleinfo-remove-tag:hover ~ .puzzleinfo-value,
.puzzleinfo-remove-tag:hover ~ .puzzleinfo-value * {
  text-decoration: line-through;
}
.puzzleinfo-reset {
  position: absolute;
  margin: 5px;
  padding: 2px;
  height: 12px;
  width: 12px;
  right: 0;
  bottom: 0.5em;
  transform: translate(0, 50%);
  z-index: 1;
  cursor: pointer;
}
.puzzleinfo-reset {
  filter: drop-shadow(0 0 3px red);
}
.puzzleinfo-reset:hover + * {
  text-decoration: line-through;
}

.puzzleinfo .loader-container {
  border: none;
  padding-left: 5px;
}
.puzzleinfo .loader {
  border-radius: 50%;
  width: 0.75rem;
  height: 0.75rem;
  vertical-align: middle;
}
.puzzleinfo .feeds .loader {
  display: inline-block;
  margin-left: 5px;
}
.puzzleinfo .loader.loading {
  border: 0.25rem solid lightgray;
  border-top: 0.25rem solid dodgerblue;
  animation: spin 0.5s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.puzzleinfo-add {
  color: green;
  cursor: pointer;
  height: 20px;
  width: 20px;
}
